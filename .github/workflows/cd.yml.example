name: Project CD to deploy backend services to AWS EC2 (Template)

on:
  push:
    branches: [main]

permissions:
  contents: read

jobs:
  docker:
    runs-on: ubuntu-latest
    environment:
      name: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker Compose
        run: |
          docker-compose -f docker-compose.prod.yml build
          docker-compose -f docker-compose.prod.yml push
  
  deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set permissions for private key
        run: |
          echo "${{ secrets.AWS_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Pull Docker image
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_INSTANCE_ID }} 'sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest'

      - name: Stop running container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_INSTANCE_ID }} 'sudo docker stop backend || true'
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_INSTANCE_ID }} 'sudo docker rm backend || true'

      - name: Run new container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_INSTANCE_ID }} 'sudo docker run -d --name backend -p 80:3000 ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest'